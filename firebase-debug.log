[debug] [2019-05-29T19:38:31.400Z] ----------------------------------------------------------------------
[debug] [2019-05-29T19:38:31.404Z] Command:       C:\Program Files\nodejs\node.exe C:\Users\Usuario Principal\AppData\Roaming\npm\node_modules\firebase-tools\lib\bin\firebase.js init
[debug] [2019-05-29T19:38:31.404Z] CLI Version:   6.10.0
[debug] [2019-05-29T19:38:31.404Z] Platform:      win32
[debug] [2019-05-29T19:38:31.404Z] Node Version:  v10.15.3
[debug] [2019-05-29T19:38:31.407Z] Time:          Wed May 29 2019 14:38:31 GMT-0500 (GMT-05:00)
[debug] [2019-05-29T19:38:31.407Z] ----------------------------------------------------------------------
[debug] 
[debug] [2019-05-29T19:38:31.426Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-05-29T19:38:31.428Z] > authorizing via signed-in user
[info] 
     ######## #### ########  ######## ########     ###     ######  ########
     ##        ##  ##     ## ##       ##     ##  ##   ##  ##       ##
     ######    ##  ########  ######   ########  #########  ######  ######
     ##        ##  ##    ##  ##       ##     ## ##     ##       ## ##
     ##       #### ##     ## ######## ########  ##     ##  ######  ########

You're about to initialize a Firebase project in this directory:

  C:\Users\Usuario Principal\Laboratoria\Organa

[info] 
=== Project Setup
[info] 
[info] First, let's associate this project directory with a Firebase project.
[info] You can create multiple project aliases by running firebase use --add, 
[info] but for now we'll just set up a default project.
[info] 
[debug] [2019-05-29T19:38:36.650Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects?page_size=100  
 
[debug] [2019-05-29T19:38:37.329Z] <<< HTTP RESPONSE 200
[info] i  Using project organa-7b8ec (Organa)
[info] 
=== Database Setup
[info] 
[info] Firebase Realtime Database Rules allow you to define how your data should be
[info] structured and when your data can be read from and written to.
[info] 
[info] Skipping overwrite of Database Rules.
[info] The rules defined in database.rules.json will be published when you do firebase deploy.
[info] 
=== Firestore Setup
[debug] [2019-05-29T19:38:46.600Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-05-29T19:38:46.605Z] > authorizing via signed-in user
[debug] [2019-05-29T19:38:46.606Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects/organa-7b8ec  
 
[debug] [2019-05-29T19:38:46.939Z] <<< HTTP RESPONSE 200
[info] 
[info] Firestore Security Rules allow you to define how and when to allow
[info] requests. You can keep these rules in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2019-05-29T19:38:50.150Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/organa-7b8ec/releases?pageSize=10&pageToken=  
 
[debug] [2019-05-29T19:38:50.612Z] <<< HTTP RESPONSE 200
[debug] [2019-05-29T19:38:50.614Z] Found ruleset: projects/organa-7b8ec/rulesets/64f258cf-5ee4-45aa-841b-804c80070777
[debug] [2019-05-29T19:38:50.615Z] >>> HTTP REQUEST GET https://firebaserules.googleapis.com/v1/projects/organa-7b8ec/rulesets/64f258cf-5ee4-45aa-841b-804c80070777  
 
[debug] [2019-05-29T19:38:50.866Z] <<< HTTP RESPONSE 200
[info] 
[info] Firestore indexes allow you to perform complex queries while
[info] maintaining performance that scales with the size of the result
[info] set. You can keep index definitions in your project directory
[info] and publish them with firebase deploy.
[info] 
[debug] [2019-05-29T19:38:51.908Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1beta2/projects/organa-7b8ec/databases/(default)/collectionGroups/-/indexes  
 
[debug] [2019-05-29T19:38:51.909Z] >>> HTTP REQUEST GET https://firestore.googleapis.com/v1beta2/projects/organa-7b8ec/databases/(default)/collectionGroups/-/fields?filter=indexConfig.usesAncestorConfig=false  
 
[debug] [2019-05-29T19:38:52.555Z] <<< HTTP RESPONSE 200
[debug] [2019-05-29T19:38:53.002Z] <<< HTTP RESPONSE 200
[info] 
=== Functions Setup
[info] 
[info] A functions directory will be created in your project with a Node.js
[info] package pre-configured. Functions can be deployed with firebase deploy.
[info] 
[debug] [2019-05-29T19:38:53.045Z] > command requires scopes: ["email","openid","https://www.googleapis.com/auth/cloudplatformprojects.readonly","https://www.googleapis.com/auth/firebase","https://www.googleapis.com/auth/cloud-platform"]
[debug] [2019-05-29T19:38:53.049Z] > authorizing via signed-in user
[debug] [2019-05-29T19:38:53.050Z] >>> HTTP REQUEST GET https://firebase.googleapis.com/v1beta1/projects/organa-7b8ec  
 
[debug] [2019-05-29T19:38:53.366Z] <<< HTTP RESPONSE 200
[debug] [2019-05-29T19:38:53.372Z] >>> HTTP REQUEST PATCH https://servicemanagement.googleapis.com/v1/services/cloudfunctions.googleapis.com/projectSettings/organa-7b8ec?updateMask=usageSettings  

[debug] [2019-05-29T19:38:53.374Z] >>> HTTP REQUEST PATCH https://servicemanagement.googleapis.com/v1/services/runtimeconfig.googleapis.com/projectSettings/organa-7b8ec?updateMask=usageSettings  

[debug] [2019-05-29T19:38:54.608Z] <<< HTTP RESPONSE 200
[debug] [2019-05-29T19:38:54.751Z] <<< HTTP RESPONSE 200
[info] +  Wrote functions/package.json
[info] +  Wrote functions/.eslintrc.json
[info] +  Wrote functions/index.js
[info] +  Wrote functions/.gitignore
